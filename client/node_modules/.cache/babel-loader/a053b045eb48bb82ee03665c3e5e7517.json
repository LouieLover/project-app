{"ast":null,"code":"import _slicedToArray from\"/Users/LX/myapps/mern-app-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from\"react\";import{GoogleMap,LoadScript}from\"@react-google-maps/api\";var containerStyle={width:\"600px\",height:\"600px\"};var center={lat:-3.745,lng:-38.523};function MyComponent(){var _React$useState=React.useState(null),_React$useState2=_slicedToArray(_React$useState,2),map=_React$useState2[0],setMap=_React$useState2[1];var onLoad=React.useCallback(function callback(map){var bounds=new window.google.maps.LatLngBounds();map.fitBounds(bounds);setMap(map);},[]);var onUnmount=React.useCallback(function callback(map){setMap(null);},[]);return/*#__PURE__*/_jsx(LoadScript,{googleMapsApiKey:\"AIzaSyBVMzrG2VGR9n61ElBUaECsWbrcjZQeLB8\",children:/*#__PURE__*/_jsx(GoogleMap,{mapContainerStyle:containerStyle,center:center,zoom:10,onLoad:onLoad,onUnmount:onUnmount,children:/*#__PURE__*/_jsx(_Fragment,{})})});}export default/*#__PURE__*/React.memo(MyComponent);","map":{"version":3,"sources":["/Users/LX/myapps/mern-app-app/client/src/components/Map/index.js"],"names":["React","GoogleMap","LoadScript","containerStyle","width","height","center","lat","lng","MyComponent","useState","map","setMap","onLoad","useCallback","callback","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","memo"],"mappings":"2PAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,CAAoBC,UAApB,KAAsC,wBAAtC,CAEA,GAAMC,CAAAA,cAAc,CAAG,CACrBC,KAAK,CAAE,OADc,CAErBC,MAAM,CAAE,OAFa,CAAvB,CAKA,GAAMC,CAAAA,MAAM,CAAG,CACbC,GAAG,CAAE,CAAC,KADO,CAEbC,GAAG,CAAE,CAAC,MAFO,CAAf,CAKA,QAASC,CAAAA,WAAT,EAAuB,qBACCT,KAAK,CAACU,QAAN,CAAe,IAAf,CADD,oDACdC,GADc,qBACTC,MADS,qBAGrB,GAAMC,CAAAA,MAAM,CAAGb,KAAK,CAACc,WAAN,CAAkB,QAASC,CAAAA,QAAT,CAAkBJ,GAAlB,CAAuB,CACtD,GAAMK,CAAAA,MAAM,CAAG,GAAIC,CAAAA,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,YAAvB,EAAf,CACAT,GAAG,CAACU,SAAJ,CAAcL,MAAd,EACAJ,MAAM,CAACD,GAAD,CAAN,CACD,CAJc,CAIZ,EAJY,CAAf,CAMA,GAAMW,CAAAA,SAAS,CAAGtB,KAAK,CAACc,WAAN,CAAkB,QAASC,CAAAA,QAAT,CAAkBJ,GAAlB,CAAuB,CACzDC,MAAM,CAAC,IAAD,CAAN,CACD,CAFiB,CAEf,EAFe,CAAlB,CAIA,mBACE,KAAC,UAAD,EAAY,gBAAgB,CAAC,yCAA7B,uBACE,KAAC,SAAD,EACE,iBAAiB,CAAET,cADrB,CAEE,MAAM,CAAEG,MAFV,CAGE,IAAI,CAAE,EAHR,CAIE,MAAM,CAAEO,MAJV,CAKE,SAAS,CAAES,SALb,uBAQE,kBARF,EADF,EADF,CAcD,CAED,2BAAetB,KAAK,CAACuB,IAAN,CAAWd,WAAX,CAAf","sourcesContent":["import React from \"react\";\nimport { GoogleMap, LoadScript } from \"@react-google-maps/api\";\n\nconst containerStyle = {\n  width: \"600px\",\n  height: \"600px\",\n};\n\nconst center = {\n  lat: -3.745,\n  lng: -38.523,\n};\n\nfunction MyComponent() {\n  const [map, setMap] = React.useState(null);\n\n  const onLoad = React.useCallback(function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds();\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n\n  return (\n    <LoadScript googleMapsApiKey=\"AIzaSyBVMzrG2VGR9n61ElBUaECsWbrcjZQeLB8\">\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={10}\n        onLoad={onLoad}\n        onUnmount={onUnmount}\n      >\n        {/* Child components, such as markers, info windows, etc. */}\n        <></>\n      </GoogleMap>\n    </LoadScript>\n  );\n}\n\nexport default React.memo(MyComponent);\n"]},"metadata":{},"sourceType":"module"}