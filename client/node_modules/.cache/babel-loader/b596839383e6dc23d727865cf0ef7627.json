{"ast":null,"code":"import _regeneratorRuntime from\"/Users/LX/myapps/mern-app-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/LX/myapps/mern-app-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/LX/myapps/mern-app-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useState,useContext}from\"react\";import{useHistory}from\"react-router-dom\";import UserContext from\"../../context/userContext\";import Axios from\"axios\";import ErrorNotice from\"../misc/ErrorNotice\";export default function Register(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),passwordCheck=_useState6[0],setPasswordCheck=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),displayName=_useState8[0],setDisplayName=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),error=_useState10[0],setError=_useState10[1];var _useContext=useContext(UserContext),setUserData=_useContext.setUserData;var history=useHistory();var submit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var newUser,loginRes;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();_context.prev=1;newUser={email:email,password:password,passwordCheck:passwordCheck,displayName:displayName};_context.next=5;return Axios.post(\"/users/register/\",newUser);case 5:_context.next=7;return Axios.post(\"/users/login/\",{email:email,password:password});case 7:loginRes=_context.sent;setUserData({token:loginRes.data.token,user:loginRes.data.user});localStorage.setItem(\"auth-token\",loginRes.data.token);history.push(\"/\");_context.next=16;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](1);_context.t0.response.data.msg&&setError(_context.t0.response.data.msg);case 16:case\"end\":return _context.stop();}}},_callee,null,[[1,13]]);}));return function submit(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"page\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Register\"}),error&&/*#__PURE__*/_jsx(ErrorNotice,{message:error,clearError:function clearError(){return setError(undefined);}}),/*#__PURE__*/_jsxs(\"form\",{className:\"form\",onSubmit:submit,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"register-email\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{id:\"register-email\",type:\"email\",onChange:function onChange(e){return setEmail(e.target.value);}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"register-password\",children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{id:\"register-password\",type:\"password\",onChange:function onChange(e){return setPassword(e.target.value);}}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Verify password\",onChange:function onChange(e){return setPasswordCheck(e.target.value);}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"register-display-name\",children:\"Display name\"}),/*#__PURE__*/_jsx(\"input\",{id:\"register-display-name\",type:\"text\",onChange:function onChange(e){return setDisplayName(e.target.value);}}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"Register\"})]})]});}","map":{"version":3,"sources":["/Users/LX/myapps/mern-app-app/client/src/components/auth/Register.js"],"names":["React","useState","useContext","useHistory","UserContext","Axios","ErrorNotice","Register","email","setEmail","password","setPassword","passwordCheck","setPasswordCheck","displayName","setDisplayName","error","setError","setUserData","history","submit","e","preventDefault","newUser","post","loginRes","token","data","user","localStorage","setItem","push","response","msg","undefined","target","value"],"mappings":"siBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,KAA4C,OAA5C,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,WAAP,KAAwB,2BAAxB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,WAAP,KAAwB,qBAAxB,CAEA,cAAe,SAASC,CAAAA,QAAT,EAAoB,eACPN,QAAQ,EADD,wCAC1BO,KAD0B,eACnBC,QADmB,8BAEDR,QAAQ,EAFP,yCAE1BS,QAF0B,eAEhBC,WAFgB,8BAGSV,QAAQ,EAHjB,yCAG1BW,aAH0B,eAGXC,gBAHW,8BAIKZ,QAAQ,EAJb,yCAI1Ba,WAJ0B,eAIbC,cAJa,8BAKPd,QAAQ,EALD,0CAK1Be,KAL0B,gBAKnBC,QALmB,gCAOTf,UAAU,CAACE,WAAD,CAPD,CAOzBc,WAPyB,aAOzBA,WAPyB,CAQjC,GAAMC,CAAAA,OAAO,CAAGhB,UAAU,EAA1B,CAEA,GAAMiB,CAAAA,MAAM,0FAAG,iBAAOC,CAAP,uIACbA,CAAC,CAACC,cAAF,GADa,gBAILC,OAJK,CAIK,CAAEf,KAAK,CAALA,KAAF,CAASE,QAAQ,CAARA,QAAT,CAAmBE,aAAa,CAAbA,aAAnB,CAAkCE,WAAW,CAAXA,WAAlC,CAJL,uBAKLT,CAAAA,KAAK,CAACmB,IAAN,CAAW,kBAAX,CAA+BD,OAA/B,CALK,8BAMYlB,CAAAA,KAAK,CAACmB,IAAN,CAAW,eAAX,CAA4B,CACjDhB,KAAK,CAALA,KADiD,CAEjDE,QAAQ,CAARA,QAFiD,CAA5B,CANZ,QAMLe,QANK,eAUXP,WAAW,CAAC,CACVQ,KAAK,CAAED,QAAQ,CAACE,IAAT,CAAcD,KADX,CAEVE,IAAI,CAAEH,QAAQ,CAACE,IAAT,CAAcC,IAFV,CAAD,CAAX,CAIAC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAmCL,QAAQ,CAACE,IAAT,CAAcD,KAAjD,EACAP,OAAO,CAACY,IAAR,CAAa,GAAb,EAfW,iFAiBX,YAAIC,QAAJ,CAAaL,IAAb,CAAkBM,GAAlB,EAAyBhB,QAAQ,CAAC,YAAIe,QAAJ,CAAaL,IAAb,CAAkBM,GAAnB,CAAjC,CAjBW,qEAAH,kBAANb,CAAAA,MAAM,4CAAZ,CAqBA,mBACE,aAAK,SAAS,CAAC,MAAf,wBACE,gCADF,CAEGJ,KAAK,eACJ,KAAC,WAAD,EAAa,OAAO,CAAEA,KAAtB,CAA6B,UAAU,CAAE,4BAAMC,CAAAA,QAAQ,CAACiB,SAAD,CAAd,EAAzC,EAHJ,cAKE,cAAM,SAAS,CAAC,MAAhB,CAAuB,QAAQ,CAAEd,MAAjC,wBACE,cAAO,OAAO,CAAC,gBAAf,mBADF,cAEE,cACE,EAAE,CAAC,gBADL,CAEE,IAAI,CAAC,OAFP,CAGE,QAAQ,CAAE,kBAACC,CAAD,QAAOZ,CAAAA,QAAQ,CAACY,CAAC,CAACc,MAAF,CAASC,KAAV,CAAf,EAHZ,EAFF,cAQE,cAAO,OAAO,CAAC,mBAAf,sBARF,cASE,cACE,EAAE,CAAC,mBADL,CAEE,IAAI,CAAC,UAFP,CAGE,QAAQ,CAAE,kBAACf,CAAD,QAAOV,CAAAA,WAAW,CAACU,CAAC,CAACc,MAAF,CAASC,KAAV,CAAlB,EAHZ,EATF,cAcE,cACE,IAAI,CAAC,UADP,CAEE,WAAW,CAAC,iBAFd,CAGE,QAAQ,CAAE,kBAACf,CAAD,QAAOR,CAAAA,gBAAgB,CAACQ,CAAC,CAACc,MAAF,CAASC,KAAV,CAAvB,EAHZ,EAdF,cAoBE,cAAO,OAAO,CAAC,uBAAf,0BApBF,cAqBE,cACE,EAAE,CAAC,uBADL,CAEE,IAAI,CAAC,MAFP,CAGE,QAAQ,CAAE,kBAACf,CAAD,QAAON,CAAAA,cAAc,CAACM,CAAC,CAACc,MAAF,CAASC,KAAV,CAArB,EAHZ,EArBF,cA2BE,cAAO,IAAI,CAAC,QAAZ,CAAqB,KAAK,CAAC,UAA3B,EA3BF,GALF,GADF,CAqCD","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport UserContext from \"../../context/userContext\";\nimport Axios from \"axios\";\nimport ErrorNotice from \"../misc/ErrorNotice\";\n\nexport default function Register() {\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [passwordCheck, setPasswordCheck] = useState();\n  const [displayName, setDisplayName] = useState();\n  const [error, setError] = useState();\n\n  const { setUserData } = useContext(UserContext);\n  const history = useHistory();\n\n  const submit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const newUser = { email, password, passwordCheck, displayName };\n      await Axios.post(\"/users/register/\", newUser);\n      const loginRes = await Axios.post(\"/users/login/\", {\n        email,\n        password,\n      });\n      setUserData({\n        token: loginRes.data.token,\n        user: loginRes.data.user,\n      });\n      localStorage.setItem(\"auth-token\", loginRes.data.token);\n      history.push(\"/\");\n    } catch (err) {\n      err.response.data.msg && setError(err.response.data.msg);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <h2>Register</h2>\n      {error && (\n        <ErrorNotice message={error} clearError={() => setError(undefined)} />\n      )}\n      <form className=\"form\" onSubmit={submit}>\n        <label htmlFor=\"register-email\">Email</label>\n        <input\n          id=\"register-email\"\n          type=\"email\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n\n        <label htmlFor=\"register-password\">Password</label>\n        <input\n          id=\"register-password\"\n          type=\"password\"\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Verify password\"\n          onChange={(e) => setPasswordCheck(e.target.value)}\n        />\n\n        <label htmlFor=\"register-display-name\">Display name</label>\n        <input\n          id=\"register-display-name\"\n          type=\"text\"\n          onChange={(e) => setDisplayName(e.target.value)}\n        />\n\n        <input type=\"submit\" value=\"Register\" />\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}