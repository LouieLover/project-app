{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/LX/myapps/mern-app-app/client/src/components/scores/scores.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"axios\";\n\nconst options = () => {\n  _s();\n\n  // Create state variables\n  let [scoresData, setScoresData] = React.useState({\n    method: \"GET\",\n    url: \"https://sportspage-feeds.p.rapidapi.com/games\",\n    headers: {\n      \"x-rapidapi-key\": \"eb45bf77dfmshf915d7ada5b551ep155d70jsn029abbe4cef7\",\n      \"x-rapidapi-host\": \"sportspage-feeds.p.rapidapi.com\"\n    }\n  }); // fetches data\n\n  const fetchData = e => {\n    e.preventDefault();\n    axios.request(options).then(response => {\n      setResponseData(response.data);\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: responseData.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => fetchData(e),\n      type: \"button\",\n      children: \"Click Me For Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), responseData.dates && responseData.dates.map(date => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 18\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(options, \"e7p02szgN/BxtSamT/vBnYiGkSM=\");\n\nexport default IndexPage;","map":{"version":3,"sources":["/Users/LX/myapps/mern-app-app/client/src/components/scores/scores.js"],"names":["React","axios","options","scoresData","setScoresData","useState","method","url","headers","fetchData","e","preventDefault","request","then","response","setResponseData","data","console","log","catch","error","responseData","title","dates","map","date","IndexPage"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB;AACA,MAAI,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,KAAK,CAACK,QAAN,CAAe;AAC/CC,IAAAA,MAAM,EAAE,KADuC;AAE/CC,IAAAA,GAAG,EAAE,+CAF0C;AAG/CC,IAAAA,OAAO,EAAE;AACP,wBAAkB,oDADX;AAEP,yBAAmB;AAFZ;AAHsC,GAAf,CAAlC,CAFoB,CAUpB;;AACA,QAAMC,SAAS,GAAIC,CAAD,IAAO;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACAV,IAAAA,KAAK,CACFW,OADH,CACWV,OADX,EAEGW,IAFH,CAESC,QAAD,IAAc;AAClBC,MAAAA,eAAe,CAACD,QAAQ,CAACE,IAAV,CAAf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACD,KALH,EAMGK,KANH,CAMUC,KAAD,IAAW;AAChBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,KARH;AASD,GAXD;;AAYA,sBACE;AAAA,4BACE;AAAA,gBAAKC,YAAY,CAACC;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAGZ,CAAD,IAAOD,SAAS,CAACC,CAAD,CAAjC;AAAsC,MAAA,IAAI,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAKGW,YAAY,CAACE,KAAb,IACCF,YAAY,CAACE,KAAb,CAAmBC,GAAnB,CAAwBC,IAAD,IAAU;AAC/B,0BAAO;AAAA,kBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,CANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAnCD;;GAAMvB,O;;AAoCN,eAAewB,SAAf","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nconst options = () => {\n  // Create state variables\n  let [scoresData, setScoresData] = React.useState({\n    method: \"GET\",\n    url: \"https://sportspage-feeds.p.rapidapi.com/games\",\n    headers: {\n      \"x-rapidapi-key\": \"eb45bf77dfmshf915d7ada5b551ep155d70jsn029abbe4cef7\",\n      \"x-rapidapi-host\": \"sportspage-feeds.p.rapidapi.com\",\n    },\n  });\n  // fetches data\n  const fetchData = (e) => {\n    e.preventDefault();\n    axios\n      .request(options)\n      .then((response) => {\n        setResponseData(response.data);\n        console.log(response);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  return (\n    <div>\n      <h1>{responseData.title}</h1>\n      <button onClick={(e) => fetchData(e)} type=\"button\">\n        Click Me For Data\n      </button>\n      {responseData.dates &&\n        responseData.dates.map((date) => {\n          return <p>{date}</p>;\n        })}\n    </div>\n  );\n};\nexport default IndexPage;\n"]},"metadata":{},"sourceType":"module"}